{"version":3,"sources":["images/logo.svg","images/avatar.jpg","images/edit-avatar-pencil.svg","components/Header.js","utils/api.js","utils/utils.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","api","options","this","_baseUrl","baseUrl","_headers","headers","fetch","then","res","ok","json","Promise","reject","status","id","method","name","about","body","JSON","stringify","link","avatar","card","authorization","Card","props","key","_id","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","defaultAvatar","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getProfileInfo","getCards","user","userInfo","catch","err","console","log","onEditAvatar","pencil","onEditProfile","onAddPlace","map","onImageClick","Footer","PopupWithForm","isOpen","noValidate","action","onClose","title","children","submit","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentCard","setCurrentCard","closeAllPopups","required","placeholder","pattern","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gKCW5BC,MARf,WACE,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,eAAeC,IAAKC,IAAMC,IAAI,+B,8CCgHpCC,EARH,I,WA3GR,WAAYC,GAAU,oBAClBC,KAAKC,SAAWF,EAAQG,QACxBF,KAAKG,SAAWJ,EAAQK,Q,6DAGxB,OAAOC,MAAML,KAAKC,SAAS,WAAY,CAACG,QAASJ,KAAKG,WACjDG,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAI7C,OAAOP,MAAML,KAAKC,SAAS,QAAS,CAACG,QAASJ,KAAKG,WAC9CG,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAGtCC,GACP,OAAOR,MAAML,KAAKC,SAAS,SAASY,EAAI,CACpCC,OAAQ,SACRV,QAASJ,KAAKG,WAEbG,MAAK,SAACC,GACH,OAAGA,EAAIC,GACID,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,sCAGjCG,EAAMC,GAClB,OAAOX,MAAML,KAAKC,SAAS,WAAY,CACnCa,OAAQ,QACRV,QAASJ,KAAKG,SACdc,KAAMC,KAAKC,UAAU,CACjBJ,KAAMA,EACNC,MAAOA,MAGVV,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,wCAG/BQ,GACd,OAAOf,MAAML,KAAKC,SAAS,kBAAmB,CAC1Ca,OAAQ,QACRV,QAASJ,KAAKG,SACdc,KAAMC,KAAKC,UAAU,CACjBE,OAAQD,MAGXd,MAAK,SAACC,GACH,OAAGA,EAAIC,GACID,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,8BAGzCU,GACJ,OAAOjB,MAAML,KAAKC,SAAS,QAAS,CAChCa,OAAQ,OACRV,QAASJ,KAAKG,SACdc,KAAMC,KAAKC,UAAU,CACjBJ,KAAMO,EAAKP,KACXK,KAAME,EAAKF,SAGdd,MAAK,SAACC,GACH,OAAGA,EAAIC,GACID,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,8BAGzCU,GACJ,OAAOjB,MAAML,KAAKC,SAAS,eAAeqB,EAAKT,GAAI,CAC/CC,OAAQ,MACRV,QAASJ,KAAKG,WAEbG,MAAK,SAACC,GACH,OAAGA,EAAIC,GACID,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,kCAGrCU,GACR,OAAOjB,MAAML,KAAKC,SAAS,eAAeqB,EAAKT,GAAI,CAC/CC,OAAQ,SACRV,QAASJ,KAAKG,WAEbG,MAAK,SAACC,GACH,OAAGA,EAAIC,GACID,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,gB,KAKzC,CAAQ,CAChBV,QAAQ,qCAAD,OC7Ga,YD6Gb,KACPE,QAAS,CACLmB,cChHa,uCDiHb,eAAgB,sBE1FTC,MAtBf,SAAcC,GACZ,IAAMH,EAAOG,EAAMH,KAMnB,OACE,yBAAKI,IAAKJ,EAAKK,IAAKjC,UAAU,qBAC5B,yBAAKkC,QANT,WACEH,EAAMI,YAAYP,IAKW5B,UAAU,kBAAkBC,IAAK2B,EAAKF,KAAMvB,IAAKyB,EAAKP,OACjF,4BAAQrB,UAAU,mBAAmBoC,KAAK,WAC1C,yBAAKpC,UAAU,kBACb,wBAAIA,UAAU,kBAAkB4B,EAAKP,MACrC,yBAAKrB,UAAU,wBACb,4BAAQA,UAAU,iBAAiBoC,KAAK,WACxC,0BAAMpC,UAAU,0BAA0B4B,EAAKS,MAAMC,YCyChDC,MApDf,SAAcR,GAAQ,IAAD,EACaS,IAAMC,SAAS,kEAD5B,mBACZC,EADY,KACFC,EADE,OAE2BH,IAAMC,SAAS,uHAF1C,mBAEZG,EAFY,KAEKC,EAFL,OAGiBL,IAAMC,SAASK,KAHhC,mBAGZC,EAHY,KAGAC,EAHA,OAIOR,IAAMC,SAAS,IAJtB,mBAIZQ,EAJY,KAILC,EAJK,KAuBnB,OAjBAV,IAAMW,WAAU,WAOdnC,QAAQoC,IAAI,CAAChD,EAAIiD,iBAAkBjD,EAAIkD,aACtC1C,MAAK,YAAoB,IAAD,mBAAjB2C,EAAiB,KAAXN,EAAW,MAPzB,SAAkBM,GAChBZ,EAAYY,EAAKlC,MACjBwB,EAAmBU,EAAKjC,OACxB0B,EAAcO,EAAK5B,QAKjB6B,CAASD,GACTL,EAASD,MAEZQ,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAEf,IAGD,8BACE,6BAAS1D,UAAU,WACjB,yBAAKA,UAAU,iBACb,4BAAQA,UAAU,uBAAuBoC,KAAK,SAASF,QAASH,EAAM8B,cACpE,yBAAK7D,UAAU,kBAAkBC,IAAK8C,EAAY5C,IAAI,wGACtD,yBAAKH,UAAU,kBAAkBC,IAAK6D,OAExC,yBAAK9D,UAAU,wBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,mBAAmB0C,GACjC,uBAAG1C,UAAU,mBAAmB4C,IAElC,4BAAQ5C,UAAU,gBAAgBoC,KAAK,SAASF,QAASH,EAAMgC,kBAGnE,4BAAQ/D,UAAU,eAAeoC,KAAK,SAASF,QAASH,EAAMiC,cAGhE,6BAAShE,UAAU,YAChBiD,GAASA,EAAMgB,KAAI,SAACrC,GAAD,OAClB,kBAAC,EAAD,CAAMI,IAAKJ,EAAKK,IAAKL,KAAMA,EAAMO,YAAaJ,EAAMmC,qBCxC/CC,MARf,WACE,OACE,4BAAQnE,UAAU,UAChB,uBAAGA,UAAU,qBAAb,4BCUSoE,MAbf,SAAuBrC,GACrB,OACE,yBAAKZ,GAAIY,EAAMV,KAAMrB,UAAY+B,EAAMsC,OAAS,qBAAuB,SACrE,0BAAMrE,UAAU,mBAAmBqB,KAAMU,EAAMV,KAAMiD,YAAU,EAAClD,OAAO,OAAOmD,OAAO,cACnF,4BAAQrC,QAASH,EAAMyC,QAASxE,UAAU,eAAeoC,KAAK,WAC9D,wBAAIpC,UAAU,gBAAgB+B,EAAM0C,OACnC1C,EAAM2C,SACP,4BAAQ1E,UAAU,cAAcoC,KAAK,UAAUL,EAAM4C,WCK9CC,MAZf,SAAoB7C,GAClB,OACE,yBAAKZ,GAAG,gBAAgBnB,UAAY+B,EAAMsC,OAAS,qBAAuB,SACxE,yBAAKrE,UAAU,0BACb,4BAAQkC,QAASH,EAAMyC,QAASxE,UAAU,eAAeoC,KAAK,WAC9D,yBAAKpC,UAAU,eAAeC,IAAK8B,EAAMH,KAAKF,KAAMvB,IAAK4B,EAAMH,KAAKP,OACpE,wBAAIrB,UAAU,qBAAqB+B,EAAMH,KAAKP,SCkEvCwD,MAnEf,WAAgB,IAAD,EAC+CrC,IAAMC,UAAS,GAD9D,mBACNqC,EADM,KACkBC,EADlB,OAEyCvC,IAAMC,UAAS,GAFxD,mBAENuC,EAFM,KAEeC,EAFf,OAG6CzC,IAAMC,UAAS,GAH5D,mBAGNyC,EAHM,KAGiBC,EAHjB,OAI2B3C,IAAMC,UAAS,GAJ1C,mBAIN2C,EAJM,KAIQC,EAJR,OAKyB7C,IAAMC,SAAS,IALxC,mBAKN6C,EALM,KAKOC,EALP,KA4Bb,SAASC,IACPT,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBE,GAAgB,GAChBE,EAAe,IAGjB,OACE,yBAAKvF,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAM+D,cAhCV,WACEgB,GAA0B,IA+BqBf,WA5BjD,WACEiB,GAAuB,IA2ByDpB,aAxBlF,WACEsB,GAAyB,IAuB4FjB,aAhBvH,SAAyBtC,GACvB2D,EAAe3D,GAJfyD,GAAgB,MAoBd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAehE,KAAK,eAAeoD,MAAM,4HAAwBE,OAAO,yDAAYN,OAAQS,EAAwBN,QAASgB,GAC3H,2BAAOrE,GAAG,cAAcnB,UAAU,eAAeoC,KAAK,OAAOf,KAAK,SAASoE,UAAQ,EAACC,YAAY,8CAAWC,QAAQ,2DACnH,0BAAM3F,UAAU,qBAAqBmB,GAAG,sBACxC,2BAAOA,GAAG,cAAcnB,UAAU,eAAeoC,KAAK,OAAOf,KAAK,SAASoE,UAAQ,EAACC,YAAY,0DAAaC,QAAQ,6DACrH,0BAAM3F,UAAU,qBAAqBmB,GAAG,uBAG1C,kBAAC,EAAD,CAAeE,KAAK,cAAcoD,MAAM,wFAAkBE,OAAO,yDAAYN,OAAQa,EAAwBV,QAASgB,GACpH,2BAAOrE,GAAG,cAAcnB,UAAU,eAAeoC,KAAK,MAAMf,KAAK,OAAOoE,UAAQ,EAACC,YAAY,2FAC7F,0BAAM1F,UAAU,qBAAqBmB,GAAG,uBAG1C,kBAAC,EAAD,CAAeE,KAAK,YAAYoD,MAAM,gEAAcE,OAAO,6CAAUN,OAAQW,EAAsBR,QAASgB,GAC1G,2BAAOrE,GAAG,YAAYnB,UAAU,eAAeoC,KAAK,OAAOf,KAAK,OAAOuE,UAAU,IAAIC,UAAU,KAAKJ,UAAQ,EAACC,YAAY,qDACzH,0BAAM1F,UAAU,qBAAqBmB,GAAG,oBACxC,2BAAOA,GAAG,WAAWnB,UAAU,eAAeoC,KAAK,MAAMf,KAAK,OAAOoE,UAAQ,EAACC,YAAY,uGAC1F,0BAAM1F,UAAU,qBAAqBmB,GAAG,oBAG1C,kBAAC,EAAD,CAAeE,KAAK,mBAAmBoD,MAAM,2DAAcE,OAAO,eAAKN,QAAQ,EAAQG,QAASgB,IAEhG,kBAAC,EAAD,CAAYnB,OAAQe,EAAcZ,QAASgB,EAAgB5D,KAAM0D,MCzDnDQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9F,MAAK,SAAA+F,GACJA,EAAaC,gBAEdnD,OAAM,SAAAoD,GACLlD,QAAQkD,MAAMA,EAAMC,c","file":"static/js/main.14618203.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.dc3245f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/edit-avatar-pencil.d476a8b8.svg\";","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"лого\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import {token, cohortId} from './utils';\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n    getProfileInfo() {\r\n        return fetch(this._baseUrl+'users/me', {headers: this._headers})\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    getCards() {\r\n        return fetch(this._baseUrl+'cards', {headers: this._headers})\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    deleteCard(id) {\r\n        return fetch(this._baseUrl+'cards/'+id, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    editProfileUser(name, about) {\r\n        return fetch(this._baseUrl+'users/me', {\r\n            method: 'PATCH', \r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    editProfileAvatar(link) {\r\n        return fetch(this._baseUrl+'users/me/avatar', {\r\n            method: 'PATCH', \r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: link\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    addCard(card) {\r\n        return fetch(this._baseUrl+'cards', {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            })\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    addLike(card) {\r\n        return fetch(this._baseUrl+'cards/likes/'+card.id, {\r\n            method: 'PUT',\r\n            headers: this._headers,\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n    deleteLikes(card) {\r\n        return fetch(this._baseUrl+'cards/likes/'+card.id, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: `https://mesto.nomoreparties.co/v1/${cohortId}/`,\r\n    headers: {\r\n        authorization: token,\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;","/*ниже переменные для api*/\r\nexport const token = '5e47c042-6361-4cc1-a7ce-8d80154cfe12';\r\nexport const cohortId = 'cohort-12';","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  const card = props.card;\r\n\r\n  function handleClick() {\r\n    props.onCardClick(card);\r\n  }\r\n\r\n  return (\r\n    <div key={card._id} className=\"elements__element\">\r\n      <img onClick={handleClick} className=\"elements__image\" src={card.link} alt={card.name} />\r\n      <button className=\"elements__remove\" type=\"button\"></button>\r\n      <div className=\"elements__info\">\r\n        <h3 className=\"elements__name\">{card.name}</h3>\r\n        <div className=\"elements__like-group\">\r\n          <button className=\"elements__like\" type=\"button\"></button>\r\n          <span className=\"elements__like-counter\">{card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport defaultAvatar from '../images/avatar.jpg';\r\nimport pencil from '../images/edit-avatar-pencil.svg';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = React.useState('Жак-Ив Кусто');\r\n  const [userDescription, setUserDescription] = React.useState('Исследователь океана');\r\n  const [userAvatar, setUserAvatar] = React.useState(defaultAvatar);\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    function userInfo(user) {\r\n      setUserName(user.name);\r\n      setUserDescription(user.about);\r\n      setUserAvatar(user.avatar);\r\n    }\r\n\r\n    Promise.all([api.getProfileInfo(), api.getCards()])\r\n    .then(([user, cards]) => {\r\n        userInfo(user);\r\n        setCards(cards);\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__info\">\r\n          <button className=\"profile__edit-avatar\" type=\"button\" onClick={props.onEditAvatar}>\r\n            <img className=\"profile__avatar\" src={userAvatar} alt=\"аватар Жак-Ив Кусто\"/>\r\n            <img className=\"profile__pencil\" src={pencil}/>\r\n          </button>\r\n          <div className=\"profile__description\">\r\n            <div className=\"profile__name\">\r\n              <h2 className=\"profile__author\">{userName}</h2>\r\n              <p className=\"profile__status\">{userDescription}</p>\r\n            </div>\r\n            <button className=\"profile__edit\" type=\"button\" onClick={props.onEditProfile}></button>\r\n          </div>\r\n        </div>\r\n        <button className=\"profile__add\" type=\"button\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {cards && cards.map((card) => (\r\n          <Card key={card._id} card={card} onCardClick={props.onImageClick} />\r\n        ))}\r\n      </section>\r\n      \r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div id={props.name} className={(props.isOpen ? \"popup popup_opened\" : \"popup\")}>\r\n      <form className=\"popup__container\" name={props.name} noValidate method=\"POST\" action=\"index.html\">\r\n        <button onClick={props.onClose} className=\"popup__close\" type=\"button\"></button>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        {props.children}\r\n        <button className=\"popup__save\" type=\"submit\">{props.submit}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div id=\"element-image\" className={(props.isOpen ? \"popup popup_opened\" : \"popup\")}>\r\n      <div className=\"popup__image-container\">\r\n        <button onClick={props.onClose} className=\"popup__close\" type=\"button\"></button>\r\n        <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n        <h3 className=\"popup__image-name\">{props.card.name}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [currentCard, setCurrentCard] = React.useState({});\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick() {\n    setSelectedCard(true);\n  }\n\n  function setCurrentImage(card) { \n    setCurrentCard(card); \n    handleCardClick(); \n    }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setCurrentCard({});\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onImageClick={setCurrentImage} />\n      <Footer />\n      <PopupWithForm name=\"form-profile\" title=\"Редактировать профиль\" submit=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} >\n        <input id=\"form-author\" className=\"popup__input\" type=\"text\" name=\"author\" required placeholder=\"Ваше имя\" pattern=\"[A-Za-zА-Яа-яЁё -]{2,40}\"/>\n        <span className=\"popup__input-error\" id=\"form-author-error\"></span>\n        <input id=\"form-status\" className=\"popup__input\" type=\"text\" name=\"status\" required placeholder=\"Ваш статус\" pattern=\"[A-Za-zА-Яа-яЁё, -]{2,200}\"/>\n        <span className=\"popup__input-error\" id=\"form-status-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name=\"form-avatar\" title=\"Обновить аватар\" submit=\"Сохранить\" isOpen={isEditAvatarPopupOpen}  onClose={closeAllPopups} >\n        <input id=\"avatar-link\" className=\"popup__input\" type=\"url\" name=\"link\" required placeholder=\"Ссылка на аватар\"/>\n        <span className=\"popup__input-error\" id=\"avatar-link-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name=\"form-card\" title=\"Новое место\" submit=\"Создать\" isOpen={isAddPlacePopupOpen}  onClose={closeAllPopups} >\n        <input id=\"card-name\" className=\"popup__input\" type=\"text\" name=\"name\" minLength=\"1\" maxLength=\"30\" required placeholder=\"Название\"/>\n        <span className=\"popup__input-error\" id=\"card-name-error\"></span>\n        <input id=\"card-url\" className=\"popup__input\" type=\"url\" name=\"link\" required placeholder=\"Ссылка на картинку\"/>\n        <span className=\"popup__input-error\" id=\"card-url-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name=\"form-card-remove\" title=\"Вы уверены?\" submit=\"Да\" isOpen={false}  onClose={closeAllPopups} />\n\n      <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} card={currentCard} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}